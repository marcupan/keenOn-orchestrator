services:
  generate-app:
    build:
      context: ./services/keenOn-card-generate
      target: production
    container_name: generate-card-app
    env_file:
      - ./services/keenOn-card-generate/.env.production
    networks:
      - keenOn-network
    restart: unless-stopped
    stop_signal: SIGINT
    depends_on:
      postgres:
        condition: service_healthy
    command: [ "sh", "-c", "./wait-for-db.sh && pnpm db:migrate:prod && node dist/src/app.js" ]
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:4000/api/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"

  translate-service:
    build:
      context: ./services/keenOn-card-translate
      target: production
    container_name: translate-card-service
    env_file:
      - ./services/keenOn-card-translate/.env.production
    networks:
      - keenOn-network
    restart: unless-stopped
    stop_signal: SIGINT
    expose:
      - "50051"
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "256M"

  compose-service:
    build:
      context: ./services/keenOn-card-compose
      target: production
    container_name: compose-card-service
    env_file:
      - ./services/keenOn-card-compose/.env.production
    networks:
      - keenOn-network
    restart: unless-stopped
    stop_signal: SIGINT
    expose:
      - "50052"
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "256M"

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data:delegated
    env_file:
      - ./services/keenOn-card-generate/.env.production
    networks:
      - keenOn-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    stop_signal: SIGINT

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data:delegated
    env_file:
      - ./services/keenOn-card-generate/.env.production
    networks:
      - keenOn-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    stop_signal: SIGINT

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - generate-app
      - translate-service
      - compose-service
    networks:
      - keenOn-network
    restart: unless-stopped
    stop_signal: SIGINT

networks:
  keenOn-network:
    driver: bridge

volumes:
  postgres_data_prod:
  redis_data:
