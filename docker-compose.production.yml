services:
  node-app:
    build:
      context: ./services/keenOn-card-generate
      target: production
    container_name: node-app
    environment:
      NODE_ENV: production
    networks:
      - my-network
    restart: unless-stopped

  translate-service:
    build:
      context: ./services/keenOn-card-translate
      target: production
    container_name: translate-service
    networks:
      - my-network
    restart: unless-stopped

  compose-service:
    build:
      context: ./services/keenOn-card-compose
      target: production
    container_name: compose-service
    networks:
      - my-network
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.production
    networks:
      - my-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redis_data:/data
    env_file:
      - .env.production
    networks:
      - my-network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - node-app
      - translate-service
      - compose-service
    networks:
      - my-network
    restart: unless-stopped

networks:
  my-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
