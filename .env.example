# KeenOn Card Orchestration - Environment Variables Example
# Copy this file to .env, .env.development, or .env.production and adjust values accordingly

# PostgreSQL Configuration
# -----------------------
# Host for PostgreSQL database (use 'postgres' for Docker Compose, localhost for local development)
POSTGRES_HOST=postgres
# Port for PostgreSQL database
POSTGRES_PORT=5432
# Username for PostgreSQL database
POSTGRES_USER=admin
# Password for PostgreSQL database (use a strong password in production)
POSTGRES_PASSWORD=change_this_in_production
# Database name for PostgreSQL
POSTGRES_DB=keenon_db

# Redis Configuration
# ------------------
# Host for Redis (use 'redis' for Docker Compose, localhost for local development)
REDIS_HOST=redis
# Port for Redis
REDIS_PORT=6379
# Password for Redis (use a strong password in production)
REDIS_PASSWORD=change_this_in_production

# API Configuration
# ----------------
# Port for the API service
API_PORT=4000
# CORS origin for API (comma-separated list of allowed origins)
CORS_ORIGIN=http://localhost:3000
# JWT secret for access tokens (use a strong random string in production)
JWT_ACCESS_TOKEN_SECRET=change_this_in_production
# JWT secret for refresh tokens (use a strong random string in production)
JWT_REFRESH_TOKEN_SECRET=change_this_in_production
# Access token expiration time in minutes
ACCESS_TOKEN_EXPIRES_IN=15
# Refresh token expiration time in days
REFRESH_TOKEN_EXPIRES_IN=7

# Frontend Configuration
# ---------------------
# URL for the API (used by the frontend)
NEXT_PUBLIC_API_URL=http://localhost:4000/api

# gRPC Configuration
# -----------------
# Host for the Translation Service
GRPC_HOST_TRANSLATE=keenon-card-translate
# Port for the Translation Service
GRPC_PORT_TRANSLATE=50051
# Host for the Image Composition Service
GRPC_HOST_COMPOSE=keenon-card-compose
# Port for the Image Composition Service
GRPC_PORT_COMPOSE=50052

# Monitoring Configuration
# -----------------------
# Enable or disable Prometheus metrics
ENABLE_PROMETHEUS=true
# Port for Prometheus metrics
PROMETHEUS_PORT=9090
# Enable or disable logging to file
LOG_TO_FILE=false
# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Security Configuration
# ---------------------
# Enable or disable rate limiting
ENABLE_RATE_LIMITING=true
# Rate limit window in minutes
RATE_LIMIT_WINDOW_MINUTES=15
# Maximum number of requests per window
RATE_LIMIT_MAX_REQUESTS=100
# Enable or disable CSRF protection
ENABLE_CSRF=true

# Backup Configuration
# -------------------
# Directory for backups
BACKUP_DIRECTORY=/data/backups
# Enable or disable automatic backups
ENABLE_AUTO_BACKUPS=true
# S3 bucket for backups (optional)
# AWS_S3_BUCKET=your-backup-bucket
