worker_processes auto;
events {
    worker_connections 1024;
    multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=public_api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=auth_api:10m rate=20r/s;

    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    upstream generate_app {
        server generate-app:4000;
        keepalive 32;
    }

    upstream translate_service {
        server translate-service:50051;
        keepalive 32;
    }

    upstream compose_service {
        server compose-service:50052;
        keepalive 32;
    }

    server {
        listen 80;
        listen [::]:80;
        http2 on;

        limit_req zone=api_limit burst=20 nodelay;

        location /api/public/ {
            limit_req zone=public_api burst=10 nodelay;
            proxy_pass http://generate_app;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/auth/ {
            limit_req zone=auth_api burst=40 nodelay;
            proxy_pass http://generate_app;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /grpc/translate/ {
            grpc_pass grpc://translate_service;
            grpc_set_header Host $host;
        }

        location /grpc/compose/ {
            grpc_pass grpc://compose_service;
            grpc_set_header Host $host;
        }

        location / {
            return 404;
        }
    }
}
