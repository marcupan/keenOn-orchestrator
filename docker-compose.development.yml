services:
  generate-app:
    build:
      context: ./services/keenOn-card-generate
      target: development
    container_name: generate-card-app-dev
    ports:
      - "4000:4000"
    volumes:
      - ./services/keenOn-card-generate:/app:cached
      - /app/node_modules
    env_file:
      - ./services/keenOn-card-generate/.env.development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - keenOn-network
    healthcheck:
      test: ["CMD", "grpcurl", "-plaintext", "localhost:50051", "list"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  translate-service:
    build:
      context: ./services/keenOn-card-translate
      target: development
    container_name: translate-card-service-dev
    ports:
      - "50051:50051"
    volumes:
      - ./services/keenOn-card-translate:/app
    env_file:
      - ./services/keenOn-card-translate/.env.development
    networks:
      - keenOn-network
    restart: unless-stopped

  compose-service:
    build:
      context: ./services/keenOn-card-compose
      target: development
    container_name: compose-card-service-dev
    ports:
      - "50052:50052"
    volumes:
      - ./services/keenOn-card-compose:/app
    env_file:
      - ./services/keenOn-card-compose/.env.development
    networks:
      - keenOn-network
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    container_name: postgres-dev
    ports:
      - "6500:5432"  # Development-specific port
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./services/keenOn-card-generate/.env.development
    networks:
      - keenOn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    env_file:
      - ./services/keenOn-card-generate/.env.development
    networks:
      - keenOn-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx-dev
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - generate-app
      - translate-service
      - compose-service
    networks:
      - keenOn-network
    restart: unless-stopped

networks:
  keenOn-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
