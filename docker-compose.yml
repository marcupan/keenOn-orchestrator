services:
    generate-app:
        build:
            context: ./services/keenOn-card-generate
        container_name: generate-card-app
        ports:
            - "4001:4001"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - my-network
        restart: unless-stopped

    translate-service:
        build:
            context: ./services/keenOn-card-translate
        container_name: translate-card-service
        ports:
            - "50051:50051"
        networks:
            - my-network
        restart: unless-stopped

    compose-service:
        build:
            context: ./services/keenOn-card-compose
        container_name: compose-card-service
        ports:
            - "50052:50052"
        networks:
            - my-network
        restart: unless-stopped

    postgres:
        image: postgres:14-alpine
        container_name: postgres
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        env_file:
            - ./services/keenOn-card-generate/.env
        networks:
            - my-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped

    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        env_file:
            - ./services/keenOn-card-generate/.env
        networks:
            - my-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped

    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "80:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - generate-app
            - translate-service
            - compose-service
        networks:
            - my-network
        restart: unless-stopped

networks:
    my-network:
        driver: bridge

volumes:
    postgres_data:
    redis_data:
